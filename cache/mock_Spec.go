// Code generated by mockery v2.14.0. DO NOT EDIT.

package cache

import (
	context "context"
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// MockSpec is an autogenerated mock type for the Spec type
type MockSpec struct {
	mock.Mock
}

// Delete provides a mock function with given fields: ctx, key
func (_m *MockSpec) Delete(ctx context.Context, key string) {
	_m.Called(ctx, key)
}

// Get provides a mock function with given fields: ctx, key
func (_m *MockSpec) Get(ctx context.Context, key string) (bool, interface{}) {
	ret := _m.Called(ctx, key)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, key)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 interface{}
	if rf, ok := ret.Get(1).(func(context.Context, string) interface{}); ok {
		r1 = rf(ctx, key)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(interface{})
		}
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, key, item
func (_m *MockSpec) Save(ctx context.Context, key string, item interface{}) {
	_m.Called(ctx, key, item)
}

// SaveWithTTL provides a mock function with given fields: ctx, key, item, ttl
func (_m *MockSpec) SaveWithTTL(ctx context.Context, key string, item interface{}, ttl time.Duration) {
	_m.Called(ctx, key, item, ttl)
}

type mockConstructorTestingTNewMockSpec interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockSpec creates a new instance of MockSpec. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockSpec(t mockConstructorTestingTNewMockSpec) *MockSpec {
	mock := &MockSpec{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
